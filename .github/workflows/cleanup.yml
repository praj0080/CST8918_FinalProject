name: 'Cleanup Environment'

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to clean up'
        required: true
        type: choice
        options: [dev, test, prod]
      confirm:
        description: 'Type "DESTROY" to confirm'
        required: true

env:
  # Pull values from your Azure Service Principal JSON in AZURE_CREDENTIALS
  ARM_CLIENT_ID:       ${{ fromJSON(secrets.AZURE_CREDENTIALS).clientId }}
  ARM_CLIENT_SECRET:   ${{ fromJSON(secrets.AZURE_CREDENTIALS).clientSecret }}
  ARM_SUBSCRIPTION_ID: ${{ fromJSON(secrets.AZURE_CREDENTIALS).subscriptionId }}
  ARM_TENANT_ID:       ${{ fromJSON(secrets.AZURE_CREDENTIALS).tenantId }}

jobs:
  cleanup:
    name: 'Cleanup Environment'
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.confirm == 'DESTROY' }}
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Validate confirmation
        run: |
          if [ "${{ github.event.inputs.confirm }}" != "DESTROY" ]; then
            echo "Confirmation text did not match 'DESTROY'. Exiting."
            exit 1
          fi

      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Terraform Destroy
        working-directory: terraform/environments/${{ github.event.inputs.environment }}
        env:
          TF_IN_AUTOMATION: true
        run: |
          terraform init -input=false -upgrade
          terraform destroy -auto-approve \
            -input=false \
            -var="openweather_api_key=${{ secrets.OPENWEATHER_API_KEY }}"

      - name: Cleanup Kubernetes namespace
        run: |
          # Get AKS credentials (Group 11 naming)
          az aks get-credentials \
            --resource-group cst8918-final-project-group-11-${{ github.event.inputs.environment }} \
            --name ${{ github.event.inputs.environment }}-weather-aks \
            --overwrite-existing \
            2>/dev/null || true

          # Delete app namespace (ignore if missing)
          kubectl delete namespace weather-app-${{ github.event.inputs.environment }} --ignore-not-found=true

          echo "Environment ${{ github.event.inputs.environment }} destroyed."
