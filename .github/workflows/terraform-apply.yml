name: 'Terraform Apply'

on:
  push:
    branches: [main]
    paths:
      - 'terraform/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'dev'
        type: choice
        options: [dev, test, prod]

# Use the same SP JSON you stored in AZURE_CREDENTIALS
env:
  ARM_CLIENT_ID:       ${{ fromJSON(secrets.AZURE_CREDENTIALS).clientId }}
  ARM_CLIENT_SECRET:   ${{ fromJSON(secrets.AZURE_CREDENTIALS).clientSecret }}
  ARM_SUBSCRIPTION_ID: ${{ fromJSON(secrets.AZURE_CREDENTIALS).subscriptionId }}
  ARM_TENANT_ID:       ${{ fromJSON(secrets.AZURE_CREDENTIALS).tenantId }}

jobs:
  terraform-apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest

    # If manual, run for the chosen env; otherwise run for dev & test by default
    strategy:
      matrix:
        environment: ${{ github.event_name == 'workflow_dispatch'
            && fromJSON(format('["{0}"]', github.event.inputs.environment))
            || fromJSON('["dev", "test"]') }}
    environment: ${{ matrix.environment }}

    defaults:
      run:
        shell: bash
        working-directory: terraform/environments/${{ matrix.environment }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Terraform Init
        run: |
          terraform init -upgrade -input=false

      - name: Terraform Format
        run: terraform fmt -check -recursive

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: |
          terraform plan \
            -input=false \
            -var="openweather_api_key=${{ secrets.OPENWEATHER_API_KEY }}" \
            -out=tfplan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: |
          terraform apply -input=false -auto-approve tfplan
